
---------------------log-----------------------




-----------------------------------------------




接口说明：


namespace common
{
        void com_error(const char * string, ...);
                输出错误信息到stdout和error.log, 每条消息最大长度1024字节.
                注意:过长的错误信息会导致缓冲区溢出.

        bool MemoryReport(char * report, int len);
                包含common.h后,用NEW代替new, 可以记录内存分配信息.
                在任何时刻,可以用MemoryReport()来得到未释放的内存信息.
                参数:     report用于存放结果字符串, len表示缓冲区长度.
                返回值:   当缓冲区长度不足以存放所有信息时,函数返回false.
}



namespace pl
{
	void * load(const char * filename, unsigned int& __out__len);	
	void unload(const char * filename);
	void unloadall();	
}
        preload名字空间.
        load函数用于预先加载文件.返回值为文件内容.第一个参数是文件名,文件的长度
    返回到第二个参数.当重复加载同一个文件时,load函数会查找并使用已加载过的文件.
        unload用于从内存中移除文件.
        unloadall从内存中移除所有预加载的文件.



        



